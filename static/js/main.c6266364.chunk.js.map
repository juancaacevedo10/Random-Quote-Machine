{"version":3,"sources":["utils/mocks/frases-mocks.js","components/Boton.js","components/Quotes.js","components/Autor.js","components/QuoteContenedor.js","pages/QuotePages.js","App.js","index.js"],"names":["quotes","colors","frases","id","fs","autor","Boton","cambiarFrase","frase","color","twitter","encodeURIComponent","className","type","href","rel","target","style","backgroundColor","onClick","event","preventDefault","Quotes","Autor","QuoteContenedor","QuotePages","props","state","frases_Mocks","min","max","Math","floor","random","valor","this","dateRandom","setState","cambiarFrases","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6266364.chunk.js","sourcesContent":["const quotes = {\r\n\r\n    colors : ['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', \"#472E32\", \"#BDBB99\", \"#77B1A9\"], \r\n\r\n    frases: [\r\n      {\r\n        id: 1,\r\n        fs: ' Todos los hombres mueren, pero no todos han vivido',\r\n        autor: 'Braveheart',\r\n\r\n      },\r\n      {\r\n        id: 2,\r\n        fs: 'Las ilusiones pueden ser muy poderosas',\r\n        autor: 'Lawrence de Arabia',\r\n\r\n      },\r\n      {\r\n        id: 3,\r\n        fs: 'Todos esos momentos se perderán en el tiempo como lágrimas en la lluvia',\r\n        autor: 'Blade Runner',\r\n\r\n      },\r\n      {\r\n        id: 4,\r\n        fs: 'No hay dos palabras que sean más dañinas en nuestro idioma que \"buen trabajo\"',\r\n        autor: 'Whiplash',\r\n\r\n      },\r\n      {\r\n        id: 5,\r\n        fs: 'No existen preguntas sin respuesta, solo preguntas mal formuladas',\r\n        autor: 'Matrix',\r\n\r\n      },\r\n      {\r\n        id: 6,\r\n        fs: 'Me he subido a mi mesa para recordarme que siempre hay que mirar las cosas de un modo diferente',\r\n        autor: 'El club de los poetas muertos',\r\n\r\n      },\r\n      {\r\n        id: 7,\r\n        fs: ' Buenos días… y por si no volvemos a vernos: buenos días, buenas tardes y buenas noches',\r\n        autor: 'El Show de Truman',\r\n\r\n      },\r\n      {\r\n        id: 8,\r\n        fs: 'Las monjas nos enseñaron que hay dos caminos que puedes seguir en la vida, el de la Naturaleza y el de lo Divino',\r\n        autor: 'El árbol de la Vida',\r\n\r\n      },\r\n      {\r\n        id: 9,\r\n        fs: 'Puede que no sea muy listo, pero sé lo que es el amor',\r\n        autor: 'Forrest Gump',\r\n\r\n      },\r\n      {\r\n        id: 10,\r\n        fs: 'La muerte nos sonríe a todos, devolvámosle la sonrisa',\r\n        autor: 'El Gladiador',\r\n\r\n      },\r\n      {\r\n        id: 11,\r\n        fs: 'El verdadero perdedor es aquél que tiene tanto miedo a no ganar que ni siquiera lo intenta',\r\n        autor: 'Little Miss Sunshine',\r\n\r\n      },\r\n    ],\r\n  };\r\n  \r\n  export default quotes;","import React from 'react';\r\n\r\nconst Boton = ({cambiarFrase, frase, color }) => {\r\n    const twitter = `https://twitter.com/intent/tweet?text=\"${encodeURIComponent(frase.fs)}\"-${encodeURIComponent(frase.autor)}`;\r\n    const tumblr = `https://www.tumblr.com/`;\r\n    return ( \r\n        <div className=\"buttons\">\r\n                    \r\n            <a  type=\"button\" href={twitter} id=\"tweet-quote\"   className=\"btn\"   rel=\"noopener noreferrer\" target=\"_blank\" style={{backgroundColor: color}}><i className=\"fab fa-twitter\" style={{color: \"white\"}}></i></a>\r\n            <a type=\"button\"  href={tumblr} id=\"tumblr-quote\"  className=\"btn\"  rel=\"noopener noreferrer\" target=\"_blank\" style={{backgroundColor: color}}><i className=\"fab fa-tumblr \" style={{color: \"white\"}}></i></a>\r\n            <a href=\"/\" onClick={(event) => event.preventDefault() || cambiarFrase()} id=\"new-quote\" type=\"button\" className=\"btn text-white\" style={{backgroundColor: color}}>Nueva Frase</a>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n \r\nexport default Boton;","import React from 'react'\r\n\r\n\r\nconst Quotes = ({frase}) => {\r\n  \r\n    return ( \r\n        <div className=\"quote-text text-center\">\r\n        <p id=\"text\"><i className=\"fas fa-quote-left\"></i> {frase.fs}</p>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n \r\nexport default Quotes;","import React from 'react'\r\n\r\n\r\nconst Autor = ({frase}) => {\r\n   \r\n    return ( \r\n        <div className=\"quote-author text-right\">\r\n                    <small id=\"author\">-{frase.autor}</small>\r\n                </div>\r\n    );\r\n}\r\n\r\n\r\n \r\nexport default Autor;","import React from 'react'\r\nimport Boton from './Boton'\r\nimport Quotes from './Quotes';\r\nimport Autor from './Autor';\r\n\r\n\r\n\r\nconst QuoteContenedor = ({cambiarFrase,frase,color, }) => {\r\n    return (  \r\n\r\n        <div id=\"wrapper\"  className=\"container\">\r\n            <div id=\"quote-box\">\r\n\r\n                <Quotes\r\n                frase={frase}></Quotes>\r\n                \r\n                <Autor \r\n                frase={frase}></Autor><br/>\r\n\r\n                <Boton \r\n                cambiarFrase={cambiarFrase}\r\n                frase= {frase}\r\n                color = {color}\r\n                />\r\n                                \r\n            </div>\r\n            <p className=\"footer text-white\">By Juan Camilo Acevedo</p>\r\n\r\n        </div>\r\n        \r\n\r\n    );\r\n}\r\n\r\nexport default QuoteContenedor","import React, { Component } from 'react'\r\nimport frases_Mocks from '../utils/mocks/frases-mocks';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport QuoteContenedor from '../components/QuoteContenedor'\r\n\r\n\r\n\r\nclass QuotePages extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {  \r\n        frase: frases_Mocks.frases[0],\r\n        colors: frases_Mocks.colors[0]\r\n      }\r\n    }\r\n\r\n    dateRandom(min, max) {\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n      }\r\n      \r\n      cambiarFrases(){\r\n        const valor = this.dateRandom(0,11)\r\n        this.setState({\r\n          frase:  frases_Mocks.frases[valor],\r\n          colors: frases_Mocks.colors[valor]\r\n        })\r\n        \r\n      }\r\nrender(){\r\n    return (\r\n        <div className=\"Contenedor\" style={{backgroundColor: this.state.colors, color:this.state.colors}}>\r\n        \r\n        <QuoteContenedor \r\n         cambiarFrase = {() => this.cambiarFrases()}\r\n          frase = {this.state.frase}\r\n          color = {this.state.colors}\r\n         \r\n        />\r\n      </div>\r\n  );\r\n    }\r\n}\r\n\r\nexport default QuotePages;\r\n","import React from 'react';\nimport './App.css';\nimport QuotePages from './pages/QuotePages'\n\nfunction App() {\n  return (\n    <QuotePages></QuotePages>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}